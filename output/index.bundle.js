(()=>{"use strict";var e={818:e=>{e.exports=require("dotenv")}},r={};function t(o){var n=r[o];if(void 0!==n)return n.exports;var a=r[o]={exports:{}};return e[o](a,a.exports,t),a.exports}t.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return t.d(r,{a:r}),r},t.d=(e,r)=>{for(var o in r)t.o(r,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:r[o]})},t.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var o={};(()=>{t.r(o),t.d(o,{default:()=>q});const e=require("https");var r=t.n(e);const n=require("fs");var a=t.n(n);const s=require("joi");var i=t.n(s);t(818).config();const u=i().object().keys({VERSION:i().string(),NODE_ENV:i().string().default("development").allow(["development","production"]),PORT:i().number().default(3e3),SENDGRID_API_KEY:i().string(),EMAIL_FROM:i().string().email()}).unknown().required(),{error:d,value:l}=i().validate(process.env,u);if(d)throw new Error(`Config validation error: ${d.message}`);const c={version:l.VERSION,env:l.NODE_ENV,port:l.PORT,sendgridApiKey:l.SENDGRID_API_KEY,emailFrom:l.EMAIL_FROM},p=require("express");var v=t.n(p);const g=require("body-parser");var y=t.n(g);const f=require("cors");var m=t.n(f);const h=require("morgan");var M=t.n(h);const N=["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"],O=require("http-status");var S=t.n(O);const b=e=>({statusCode:S()[200],data:e}),E=v().Router();E.route("/").get(((e,r)=>{try{const e=N;r.send(b(e))}catch(e){r.status(500).send(`Get US states failed: ${e}`)}}));const I=E,k=v().Router();k.use("/states",I);const w=k,_=v()();_.use(m()()),_.use(y().json()),_.use(y().urlencoded({extended:!0})),_.use(M()("dev")),_.use(v().static("public")),_.get("/",((e,r)=>r.render("index"))),_.use("/api",w);const x=_,R={key:a().readFileSync("key.pem","utf8"),cert:a().readFileSync("cert.pem","utf8")};r().createServer(R,x).listen(c.port,(()=>{console.log("https server listening on port 3000")}));const q=x})(),module.exports=o})();